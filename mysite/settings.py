"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path

# SOLUTION POUR PYINSTALLER - Configuration Django avant tout
import django
from django.conf import settings as django_settings

# Éviter la double configuration
if not django_settings.configured:
    # Build paths inside the project like this: BASE_DIR / 'subdir'.
    BASE_DIR = Path(__file__).resolve().parent.parent

    # Quick-start development settings - unsuitable for production
    # See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = 'redatest'

    # SECURITY WARNING: don't run with debug turned on in production!
    # Mode dynamique selon l'environnement
    DEBUG = not ('DJANGO_DB_PATH' in os.environ)  # False en mode build, True en dev

    # Hosts autorisés - permissif pour le build
    ALLOWED_HOSTS = ['*'] if 'DJANGO_DB_PATH' in os.environ else []

    # Augmenter les limites pour l'admin
    DATA_UPLOAD_MAX_NUMBER_FIELDS = 1024000  # ou une valeur plus grande si nécessaire
    DATA_UPLOAD_MAX_MEMORY_SIZE = 10485760  # 10MB

    # Application definition
    INSTALLED_APPS = [
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',

        'polls',
        'vineland',

        # 'social_django',
        'crispy_forms',
        # 'templatetags'
    ]

    MIDDLEWARE = [
        'django.middleware.security.SecurityMiddleware',
        'django.contrib.sessions.middleware.SessionMiddleware',
        'django.middleware.common.CommonMiddleware',
        'django.middleware.csrf.CsrfViewMiddleware',
        'django.contrib.auth.middleware.AuthenticationMiddleware',
        'django.contrib.messages.middleware.MessageMiddleware',
        'django.middleware.clickjacking.XFrameOptionsMiddleware',
    ]

    ROOT_URLCONF = 'mysite.urls'

    # Templates - configuration dynamique pour le build
    if 'DJANGO_TEMPLATE_DIRS' in os.environ:
        TEMPLATE_DIRS = [os.environ['DJANGO_TEMPLATE_DIRS']]
    else:
        TEMPLATE_DIRS = [BASE_DIR / 'templates']

    TEMPLATES = [
        {
            'BACKEND': 'django.template.backends.django.DjangoTemplates',
            'DIRS': TEMPLATE_DIRS,
            'APP_DIRS': True,
            'OPTIONS': {
                'context_processors': [
                    'django.template.context_processors.debug',
                    'django.template.context_processors.request',
                    'django.contrib.auth.context_processors.auth',
                    'django.contrib.messages.context_processors.messages',
                ],
            },
        },
    ]

    LOGIN_REDIRECT_URL = '/'

    WSGI_APPLICATION = 'mysite.wsgi.application'

    # Database - configuration dynamique pour le build
    if 'DJANGO_DB_PATH' in os.environ:
        # Mode exécutable - base de données dans le dossier utilisateur
        DATABASE_PATH = os.environ['DJANGO_DB_PATH']
    else:
        # Mode développement - base de données dans le projet
        DATABASE_PATH = BASE_DIR / 'db.sqlite3'

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': DATABASE_PATH,
        }
    }

    # Password validation
    # https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

    AUTH_PASSWORD_VALIDATORS = [
        {
            'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
        },
    ]

    # Internationalization
    # https://docs.djangoproject.com/en/5.1/topics/i18n/

    LANGUAGE_CODE = 'fr'

    TIME_ZONE = 'GMT'

    USE_I18N = True

    USE_TZ = True

    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/5.1/howto/static-files/

    STATIC_URL = 'static/'

    # Configuration statique dynamique pour le build
    if 'DJANGO_DB_PATH' in os.environ:
        # Mode build - fichiers statiques embarqués
        STATICFILES_DIRS = []
        STATIC_ROOT = os.path.join(os.path.dirname(__file__), 'static')
    else:
        # Mode développement
        STATICFILES_DIRS = [
            os.path.join(BASE_DIR, "static")
        ]

    # Media files - pour les uploads (PDFs, etc.)
    if 'DJANGO_MEDIA_ROOT' in os.environ:
        MEDIA_ROOT = os.environ['DJANGO_MEDIA_ROOT']
    else:
        MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

    MEDIA_URL = '/media/'

    # Default primary key field type
    # https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

    DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

    AUTH_USER_MODEL = 'polls.Parent'
    LOGIN_URL = 'login'
    LOGIN_REDIRECT_URL = 'home'

    # Configuration des logs - silence en mode build
    if 'DJANGO_DB_PATH' in os.environ:
        LOGGING = {
            'version': 1,
            'disable_existing_loggers': False,
            'handlers': {
                'null': {
                    'class': 'logging.NullHandler',
                },
            },
            'root': {
                'handlers': ['null'],
            },
            'loggers': {
                'django': {
                    'handlers': ['null'],
                    'propagate': False,
                },
            }
        }